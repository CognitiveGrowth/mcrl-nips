// Generated by CoffeeScript 1.12.3
var assert, check, checkObj, checkWindowSize, converter, delay, getTime, loadJson, markdown, zip,
  slice = [].slice;

converter = new showdown.Converter();

markdown = function(txt) {
  return converter.makeHtml(txt);
};

getTime = function() {
  return (new Date).getTime();
};

loadJson = function(file) {
  var result;
  result = $.ajax({
    dataType: 'json',
    url: file,
    async: false
  });
  return result.responseJSON;
};

zip = function() {
  var rows;
  rows = 1 <= arguments.length ? slice.call(arguments, 0) : [];
  return rows[0].map(function(_, c) {
    return rows.map(function(row) {
      return row[c];
    });
  });
};

check = function(name, val) {
  if (val === void 0) {
    throw new Error(name + "is undefined");
  }
  return val;
};

delay = function(time, func) {
  return setTimeout(func, time);
};

checkObj = function(obj, keys) {
  var i, k, len;
  if (keys == null) {
    keys = Object.keys(obj);
  }
  for (i = 0, len = keys.length; i < len; i++) {
    k = keys[i];
    if (obj[k] === void 0) {
      console.log('Bad Object: ', obj);
      throw new Error(k + " is undefined");
    }
  }
  return obj;
};

assert = function(val) {
  if (!val) {
    throw new Error('Assertion Error');
  }
  return val;
};

checkWindowSize = function(width, height, display) {
  var maxHeight, win_width;
  console.log('Window too small!');
  win_width = $(window).width();
  maxHeight = $(window).height();
  if ($(window).width() < width || $(window).height() < height) {
    display.hide();
    return $('#window_error').show();
  } else {
    $('#window_error').hide();
    return display.show();
  }
};
