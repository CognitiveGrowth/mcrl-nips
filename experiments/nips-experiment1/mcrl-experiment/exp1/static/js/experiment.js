// Generated by CoffeeScript 1.12.3

/*
experiment.coffee
Fred Callaway

Demonstrates the jspsych-mdp plugin
 */
var BONUS, Block, DEBUG, MDPBlock, QuizLoop, TextBlock, blocks, calculateBonus, condition, debug_slide, delay, experiment_timeline, finish, instruct_loop, instructions, main, params, prompt_resubmit, psiturk, quiz, reprompt, save_data, text,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

DEBUG = true;

console.log(condition);

if (DEBUG) {
  console.log("X X X X X X X X X X X X X X X X X\n X X X X X DEBUG  MODE X X X X X\nX X X X X X X X X X X X X X X X X");
  condition = 6;
} else {
  condition = 6;
  console.log("# =============================== #\n# ========= NORMAL MODE ========= #\n# =============================== #");
}

psiturk = new PsiTurk(uniqueId, adServerLoc, mode);

params = void 0;

blocks = void 0;

(function() {
  var expData, trials;
  expData = loadJson('static/json/condition_1.json');
  trials = expData.trials;
  params = expData.params;
  if (condition < 6) {
    params.PR_type = 1;
  }
  if (condition >= 6) {
    return params.PR_type = 2;
  }
})();

if (condition <= 6) {
  params.time_cost_is_low = true;
  params.time_cost_is_high = false;
}

if (condition > 6) {
  params.time_cost_is_low = false;
  params.time_cost_is_high = true;
}

psiturk.recordUnstructuredData('params', params);

text = {
  debug: function() {
    if (DEBUG) {
      return "`DEBUG`";
    } else {
      return '';
    }
  }
};

Block = (function() {
  function Block(config) {
    _.extend(this, config);
    this.block = this;
    if (this.init != null) {
      this.init();
    }
  }

  return Block;

})();

TextBlock = (function(superClass) {
  extend(TextBlock, superClass);

  function TextBlock() {
    return TextBlock.__super__.constructor.apply(this, arguments);
  }

  TextBlock.prototype.type = 'text';

  TextBlock.prototype.cont_key = ['space'];

  return TextBlock;

})(Block);

QuizLoop = (function(superClass) {
  extend(QuizLoop, superClass);

  function QuizLoop() {
    return QuizLoop.__super__.constructor.apply(this, arguments);
  }

  QuizLoop.prototype.loop_function = function(data) {
    var c, i, len, ref;
    console.log('data', data);
    ref = data[data.length].correct;
    for (i = 0, len = ref.length; i < len; i++) {
      c = ref[i];
      if (!c) {
        return true;
      }
    }
    return false;
  };

  return QuizLoop;

})(Block);

MDPBlock = (function(superClass) {
  extend(MDPBlock, superClass);

  function MDPBlock() {
    return MDPBlock.__super__.constructor.apply(this, arguments);
  }

  MDPBlock.prototype.type = 'graph';

  MDPBlock.prototype.init = function() {
    return this.trialCount = 0;
  };

  return MDPBlock;

})(Block);

debug_slide = new Block({
  type: 'html',
  url: 'test.html'
});

if (condition === 0) {
  instructions = new Block({
    type: "instructions",
    pages: [markdown("# Instructions " + (text.debug()) + "\n\nIn this game, you are in charge of flying an aircraft. As shown below, you will begin in the central location. The arrows show which actions are available in each location. Note that once you have made a move you cannot go back; you can only move forward along the arrows.\nThere are eight possible final destinations labelled 1-8 in the image below. On your way there, you will visit two intermediate locations. <b>Every location you visit will add or subtract money to your account</b>, and your task is to earn as much money as possible. <b>To find out how much money you earn or lose in a location, you have to click on it.</b> You can uncover the value of as many or as few locations as you wish.\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide1.png\" width=600></div></p>\n\n<p>To navigate the airplane, use the arrows (the example above is non-interactive). You can uncover the value of a location at any time. Click \"Next\" to proceed.</p>"), markdown("# Instructions\n\nYou will play the game for 8 rounds. The value of every location will change from each round to the next. At the begining of each round, the value of every location will be hidden, and you will only discover the value of the locations you click on. The example below shows the value of every location, just to give you an example of values you could see if you clicked on every location. <b>Every time you click a circle to observe its value, you pay a fee of 10 cents.</b> In the example below, the current profit is $-1.60 because 16 locations have been inspected and none of their rewards has been collected yet. Each time you move to a location, your profit will be adjusted. If you move to a location with a hidden value, your profit will still be adjusted according to the value of that location. There will be a 3.18-second delay period after the first move in each round.\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide2.png\" width=600></div></p>"), markdown("# Instructions\n\nThere are two more important things to understand:\n<p>1. <b>You must spend at least 45 seconds on each round.</b> As shown below, there will be a countdown timer. You won’t be able to proceed to the next round before the countdown has finished, but you can take as much time as you like afterwards.</p>\n<p>2. <b>You will earn <u>REAL MONEY</u> for your flights.</b> Specifically, one of the 8 rounds will be chosen at random and you will receive 5% of your earnings in that round as a bonus payment.</p>\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide3.png\" width=600></div></p>\n\n<p> You may proceed to take an entry quiz, or go back to review the instructions.</p>")],
    show_clickable_nav: true
  });
} else if (condition === 1) {
  instructions = new Block({
    type: "instructions",
    pages: [markdown("# Instructions " + (text.debug()) + "\n\nIn this game, you are in charge of flying an aircraft. As shown below, you will begin in the central location. The arrows show which actions are available in each location. Note that once you have made a move you cannot go back; you can only move forward along the arrows.\nThere are eight possible final destinations labelled 1-8 in the image below. On your way there, you will visit two intermediate locations. <b>Every location you visit will add or subtract money to your account</b>, and your task is to earn as much money as possible. <b>To find out how much money you earn or lose in a location, you have to click on it.</b> You can uncover the value of as many or as few locations as you wish.\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide1.png\" width=600></div></p>\n\n<p>To navigate the airplane, use the arrows (the example above is non-interactive). You can uncover the value of a location at any time. Click \"Next\" to proceed.</p>"), markdown("# Instructions\n\nYou will play the game for 8 rounds. The value of every location will change from each round to the next. At the begining of each round, the value of every location will be hidden, and you will only discover the value of the locations you click on. The example below shows the value of every location, just to give you an example of values you could see if you clicked on every location. <b>Every time you click a circle to observe its value, you pay a fee of 10 cents.</b> In the example below, the current profit is $-1.60 because 16 locations have been inspected and none of their rewards has been collected yet. Each time you move to a location, your profit will be adjusted. If you move to a location with a hidden value, your profit will still be adjusted according to the value of that location.\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide2.png\" width=600></div></p>"), markdown("# Instructions\n\n<b>You will receive feedback about your planning. This feedback will help you learn how to make better decisions.</b> After each flight, if you did not plan optimally, a feedback message will apear. This message will tell you two things: <p>1) Whether you observed too few relevant values or if you observed irrelevant values (values of locations that you can\'t fly to).</p><p>2) Whether you flew along the best route given your current location and the information you had about the values of other locations.</p><p>In the example below, not enough relevant values were observed, and as a result there is a 15 second timeout penalty. <b>The duration of the timeout penalty is proportional to how poorly you planned your route:</b> the more money you could have earned from observing more values and/or choosing a better route, the longer the delay. The second feedback in the example below indicates the plane was flown along the best route, given the limited information available. If you perform optimally, no feedback will be shown and you can proceed immediately.</p>\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide4.png\" width=600></div></p>"), markdown("# Instructions\n\nThere are two more important things to understand:\n<p>1. <b>You must spend at least 45 seconds on each round.</b> As shown below, there will be a countdown timer. You won’t be able to proceed to the next round before the countdown has finished, but you can take as much time as you like afterwards.</p>\n<p>2. <b>You will earn <u>REAL MONEY</u> for your flights.</b> Specifically, one of the 8 rounds will be chosen at random and you will receive 5% of your earnings in that round as a bonus payment.</p>\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide3.png\" width=600></div></p>\n\n<p> You may proceed to take an entry quiz, or go back to review the instructions.</p>")],
    show_clickable_nav: true
  });
} else if (condition === 2 || condition === 4 || condition === 6) {
  instructions = new Block({
    type: "instructions",
    pages: [markdown("# Instructions " + (text.debug()) + "\n\nIn this game, you are in charge of flying an aircraft. As shown below, you will begin in the central location. The arrows show which actions are available in each location. Note that once you have made a move you cannot go back; you can only move forward along the arrows.\nThere are eight possible final destinations labelled 1-8 in the image below. On your way there, you will visit two intermediate locations. <b>Every location you visit will add or subtract money to your account</b>, and your task is to earn as much money as possible. <b>To find out how much money you earn or lose in a location, you have to click on it.</b> You can uncover the value of as many or as few locations as you wish.\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide1.png\" width=600></div></p>\n\n<p>To navigate the airplane, use the arrows (the example above is non-interactive). You can uncover the value of a location at any time. Click \"Next\" to proceed.</p>"), markdown("# Instructions\n\nYou will play the game for 8 rounds. The value of every location will change from each round to the next. At the begining of each round, the value of every location will be hidden, and you will only discover the value of the locations you click on. The example below shows the value of every location, just to give you an example of values you could see if you clicked on every location. <b>Every time you click a circle to observe its value, you pay a fee of 10 cents.</b> In the example below, the current profit is $-1.60 because 16 locations have been inspected and none of their rewards has been collected yet. Each time you move to a location, your profit will be adjusted. If you move to a location with a hidden value, your profit will still be adjusted according to the value of that location.\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide2.png\" width=600></div></p>"), markdown("# Instructions\n\n<b>You will receive feedback about your planning. This feedback will help you learn how to make better decisions.</b> After each flight, if you did not plan optimally, a feedback message will apear. In the example below, planning was suboptimal, and as a result there is a 15 second timeout penalty. <b>The duration of the timeout penalty is proportional to how poorly you planned your route:</b> the more money you could have earned from observing more values and/or choosing a better route, the longer the delay. If you perform optimally, no feedback will be shown and you can proceed immediately.</p>\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide5.png\" width=600></div></p>"), markdown("# Instructions\n\nThere are two more important things to understand:\n<p>1. <b>You must spend at least 45 seconds on each round.</b> As shown below, there will be a countdown timer. You won’t be able to proceed to the next round before the countdown has finished, but you can take as much time as you like afterwards.</p>\n<p>2. <b>You will earn <u>REAL MONEY</u> for your flights.</b> Specifically, one of the 8 rounds will be chosen at random and you will receive 5% of your earnings in that round as a bonus payment.</p>\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide3.png\" width=600></div></p>\n\n<p> You may proceed to take an entry quiz, or go back to review the instructions.</p>")],
    show_clickable_nav: true
  });
} else if (condition === 3) {
  instructions = new Block({
    type: "instructions",
    pages: [markdown("# Instructions " + (text.debug()) + "\n\nIn this game, you are in charge of flying an aircraft. As shown below, you will begin in the central location. The arrows show which actions are available in each location. Note that once you have made a move you cannot go back; you can only move forward along the arrows.\nThere are eight possible final destinations labelled 1-8 in the image below. On your way there, you will visit two intermediate locations. <b>Every location you visit will add or subtract money to your account</b>, and your task is to earn as much money as possible. <b>To find out how much money you earn or lose in a location, you have to click on it.</b> You can uncover the value of as many or as few locations as you wish.\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide1.png\" width=600></div></p>\n\n<p>To navigate the airplane, use the arrows (the example above is non-interactive). You can uncover the value of a location at any time. Click \"Next\" to proceed.</p>"), markdown("# Instructions\n\nYou will play the game for 8 rounds. The value of every location will change from each round to the next. At the begining of each round, the value of every location will be hidden, and you will only discover the value of the locations you click on. The example below shows the value of every location, just to give you an example of values you could see if you clicked on every location. <b>Every time you click a circle to observe its value, you pay a fee of 10 cents.</b> In the example below, the current profit is $-1.60 because 16 locations have been inspected and none of their rewards has been collected yet. Each time you move to a location, your profit will be adjusted. If you move to a location with a hidden value, your profit will still be adjusted according to the value of that location. There will be a 3.18-second delay period after the first move in each round.\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide2.png\" width=600></div></p>"), markdown("# Instructions\n\n<b>You will receive feedback about your planning. This feedback will help you learn how to make better decisions.</b> After each flight, if you did not plan optimally, a feedback message will apear. This message will tell you two things: <p>1) Whether you observed too few relevant values or if you observed irrelevant values (values of locations that you can\'t fly to).</p><p>2) Whether you flew along the best route given your current location and the information you had about the values of other locations.</p><p>The second feedback in the example below indicates the plane was flown along the best route, given the limited information available. If you perform optimally, no feedback will be shown and you can proceed immediately.</p>\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide6.png\" width=600></div></p>"), markdown("# Instructions\n\nThere are two more important things to understand:\n<p>1. <b>You must spend at least 45 seconds on each round.</b> As shown below, there will be a countdown timer. You won’t be able to proceed to the next round before the countdown has finished, but you can take as much time as you like afterwards.</p>\n<p>2. <b>You will earn <u>REAL MONEY</u> for your flights.</b> Specifically, one of the 8 rounds will be chosen at random and you will receive 5% of your earnings in that round as a bonus payment.</p>\n\n<p><div align=\"center\"><img src=\"static/js/images/instruction_images/Slide3.png\" width=600></div></p>\n\n<p> You may proceed to take an entry quiz, or go back to review the instructions.</p>")],
    show_clickable_nav: true
  });
}

if (condition === 0) {
  quiz = new Block({
    preamble: function() {
      return markdown("# Quiz");
    },
    type: 'survey-multi-choice',
    questions: ["How many flights are there per round?", "True or false: The hidden values will change each time I start a new round.", "How much does it cost to observe each hidden value?", "How many hidden values am I allowed to observe in each round?", "Which statement is TRUE?"],
    options: [['1', '2', '3', '4'], ['True', 'False'], ['$0.00', '$0.10', '$0.25', '$0.50'], ['At most 1', 'At most 5', 'At most 10', 'At most 15', 'As many or as few as I wish'], ['My earnings for each round are equal to the value of one of the locations I visit (minus the cost of making observations), and I will actually be paid 5% the earnings from one of the 8 rounds.', 'My earnings for each round are equal to the value of one of the locations I visit (minus the cost of making observations), but these earnings aren\'t real money.', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), and I will actually be paid 5% the earnings from one of the 8 rounds.', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), but these earnings aren\'t real money.']],
    required: [true, true, true, true, true],
    correct: ['3', 'True', '$0.10', 'As many or as few as I wish', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), and I will actually be paid 5% the earnings from one of the 8 rounds.'],
    on_mistake: function(data) {
      return alert("You got at least one question wrong. We'll send you back to the\ninstructions and then you can try again.");
    }
  });
} else if (condition === 1) {
  quiz = new Block({
    preamble: function() {
      return markdown("# Quiz");
    },
    type: 'survey-multi-choice',
    questions: ["How many flights are there per round?", "True or false: The hidden values will change each time I start a new round.", "How much does it cost to observe each hidden value?", "How many hidden values am I allowed to observe in each round?", "Which statement is TRUE?", "What does the feedback teach me?"],
    options: [['1', '2', '3', '4'], ['True', 'False'], ['$0.00', '$0.10', '$0.25', '$0.50'], ['At most 1', 'At most 5', 'At most 10', 'At most 15', 'As many or as few as I wish'], ['My earnings for each round are equal to the value of one of the locations I visit (minus the cost of making observations), and I will actually be paid 5% the earnings from one of the 8 rounds.', 'My earnings for each round are equal to the value of one of the locations I visit (minus the cost of making observations), but these earnings aren\'t real money.', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), and I will actually be paid 5% the earnings from one of the 8 rounds.', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), but these earnings aren\'t real money.'], ['Whether I observed the rewards of relevant locations.', 'Whether I chose the move that was best according to the information I had.', 'The duration of the delay is proportional to how much more money I could have earned by planning and deciding better.', 'All of the above.']],
    required: [true, true, true, true, true, true],
    correct: ['3', 'True', '$0.10', 'As many or as few as I wish', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), and I will actually be paid 5% the earnings from one of the 8 rounds.', 'All of the above.', 'True'],
    on_mistake: function(data) {
      return alert("You got at least one question wrong. We'll send you back to the\ninstructions and then you can try again.");
    }
  });
} else if (condition === 2 || condition === 4 || condition === 6) {
  quiz = new Block({
    preamble: function() {
      return markdown("# Quiz");
    },
    type: 'survey-multi-choice',
    questions: ["How many flights are there per round?", "True or false: The hidden values will change each time I start a new round.", "How much does it cost to observe each hidden value?", "How many hidden values am I allowed to observe in each round?", "Which statement is TRUE?", "True of false: The duration of the delay is proportional to how much more money I could have earned by planning and deciding better."],
    options: [['1', '2', '3', '4'], ['True', 'False'], ['$0.00', '$0.10', '$0.25', '$0.50'], ['At most 1', 'At most 5', 'At most 10', 'At most 15', 'As many or as few as I wish'], ['My earnings for each round are equal to the value of one of the locations I visit (minus the cost of making observations), and I will actually be paid the earnings from one of the 8 rounds.', 'My earnings for each round are equal to the value of one of the locations I visit (minus the cost of making observations), but these earnings aren\'t real money.', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), and I will actually be paid 5% the earnings from one of the 8 rounds.', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), but these earnings aren\'t real money.'], ['True', 'False']],
    required: [true, true, true, true, true, true],
    correct: ['3', 'True', '$0.10', 'As many or as few as I wish', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), and I will actually be paid 5% the earnings from one of the 8 rounds.', 'True'],
    on_mistake: function(data) {
      return alert("You got at least one question wrong. We'll send you back to the\ninstructions and then you can try again.");
    }
  });
} else if (condition === 3) {
  quiz = new Block({
    preamble: function() {
      return markdown("# Quiz");
    },
    type: 'survey-multi-choice',
    questions: ["How many flights are there per round?", "True or false: The hidden values will change each time I start a new round.", "How much does it cost to observe each hidden value?", "How many hidden values am I allowed to observe in each round?", "Which statement is TRUE?", "What does the feedback teach me?"],
    options: [['1', '2', '3', '4'], ['True', 'False'], ['$0.00', '$0.10', '$0.25', '$0.50'], ['At most 1', 'At most 5', 'At most 10', 'At most 15', 'As many or as few as I wish'], ['My earnings for each round are equal to the value of one of the locations I visit (minus the cost of making observations), and I will actually be paid 5% the earnings from one of the 8 rounds.', 'My earnings for each round are equal to the value of one of the locations I visit (minus the cost of making observations), but these earnings aren\'t real money.', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), and I will actually be paid 5% the earnings from one of the 8 rounds.', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), but these earnings aren\'t real money.'], ['Whether I observed the rewards of relevant locations.', 'Whether I chose the move that was best according to the information I had.', 'All of the above.']],
    required: [true, true, true, true, true, true],
    correct: ['3', 'True', '$0.10', 'As many or as few as I wish', 'My earnings for each round are equal to the <i>sum</i> of the values of all locations I visit (minus the cost of making observations), and I will actually be paid 5% the earnings from one of the 8 rounds.', 'All of the above.'],
    on_mistake: function(data) {
      return alert("You got at least one question wrong. We'll send you back to the\ninstructions and then you can try again.");
    }
  });
}

instruct_loop = new Block({
  timeline: [instructions, quiz],
  loop_function: function(data) {
    var c, i, len, ref;
    ref = data[1].correct;
    for (i = 0, len = ref.length; i < len; i++) {
      c = ref[i];
      if (!c) {
        return true;
      }
    }
    psiturk.finishInstructions();
    psiturk.saveData();
    return false;
  }
});

main = new MDPBlock({
  timeline: _.shuffle(trials)
});

delay = new Block({
  type: 'delay',
  duration: 60
});

finish = new Block({
  type: 'button-response',
  stimulus: function() {
    return markdown("# This completes the HIT\n\nOne or your trials has been randomly selected and we will pay you 5% of your profit on that trial as a bonus. You will be awarded a bonus of $" + (calculateBonus().toFixed(2)));
  },
  is_html: true,
  choices: ['Submit hit'],
  button_html: '<button class="btn btn-primary btn-lg">%choice%</button>'
});

if (DEBUG) {
  experiment_timeline = [main, finish];
} else {
  experiment_timeline = [instruct_loop, main, finish];
}

BONUS = void 0;

calculateBonus = function() {
  var data;
  if (DEBUG) {
    return 0;
  }
  if (BONUS != null) {
    return BONUS;
  }
  data = jsPsych.data.getTrialsOfType('graph');
  BONUS = 0.05 * Math.max(0, (_.sample(data)).score);
  psiturk.recordUnstructuredData('final_bonus', BONUS);
  return BONUS;
};

reprompt = null;

save_data = function() {
  return psiturk.saveData({
    success: function() {
      console.log('Data saved to psiturk server.');
      if (reprompt != null) {
        window.clearInterval(reprompt);
      }
      return psiturk.computeBonus('compute_bonus', psiturk.completeHIT);
    },
    error: function() {
      return prompt_resubmit;
    }
  });
};

prompt_resubmit = function() {
  $('#jspsych-target').html("<h1>Oops!</h1>\n<p>\nSomething went wrong submitting your HIT.\nThis might happen if you lose your internet connection.\nPress the button to resubmit.\n</p>\n<button id=\"resubmit\">Resubmit</button>");
  return $('#resubmit').click(function() {
    $('#jspsych-target').html('Trying to resubmit...');
    reprompt = window.setTimeout(prompt_resubmit, 10000);
    return save_data();
  });
};

jsPsych.init({
  display_element: $('#jspsych-target'),
  timeline: experiment_timeline,
  on_finish: function() {
    if (DEBUG) {
      return jsPsych.data.displayData();
    } else {
      return save_data();
    }
  },
  on_data_update: function(data) {
    console.log('data', data);
    return psiturk.recordTrialData(data);
  }
});
